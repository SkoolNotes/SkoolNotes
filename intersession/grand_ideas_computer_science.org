#+AUTHOR: Exr0n
* rand ideas in other sciences
** theory of matter
** big bang theory
** newtons laws
** conservation of matter / energy
** cell theory
** evolution
** math
*** finding relationships (abstract things)
* what do those grand theories do?
** describe invariant relationships like E=mc^2
** define limits on what is possible and what isn't
** emergent properties from computational systems that are difficult to predict
* how does computing let us do similar things to laws and theories in science?
* computational complexity theory
** how long it takes to compute the answer as a function of the input size
** overview of presentation
*** methods for determining computational complexity
*** wide variation in complexity of diff problems
*** computationally hard problems are very difficult
*** some problems have not yet been proven
*** problems have been grouped into equivalence classes
* big O notation
** approximate run time (not exact)
** how the time scales/changes
* examples
** complexity to add N numebers or convert each char in a string to upper case
*** linear
** sorting
*** n log n
** pixels
*** O(pixels)
** traveling salesman
*** N! brute force
**** very bad
**** structure and interpretation of computer programs   :source:recommended:
* programs are complex (more words than war and peace)
* programming can become faster by developing tools
** languages, compilers, debuggers, editors, libraries, methodologies, code repos
* missing grand idea: evaluating languages scientificly
** people adopt languages in a bandwagon-ey way
** people compared lisp and java and found that lisp tended to be faster, faster to write, and shorter
* inspire human reasoning skills from computation
** computational thinking by jeannette wing
* the internet - communications network that interconnects almost every computer on earth
** design goals
*** highspeed
*** reliable / decentralized
*** many types of computers
*** many types of networking tech
*** no appilation knowledge of network tech
*** no appliation knowledge of networking topology
*** many applications
*** simple application interface
*** anonymity
*** security
** design solution
*** packet switching over circuit switching (wires don't move)
*** some redundancy
*** common packet protocol
*** routing algorithms
*** network connections look like files (streams of bytes)
*** multilevel networking architecture
**** encapsulation
**** application layer, transport, internet, link, actual hardware
