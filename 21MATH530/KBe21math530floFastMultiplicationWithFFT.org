#+TITLE: Fast multiplication with fast fourier transforms
* base knowlege
** primitive root of unity
*** a number $r$ is a primitive $n$th root of unity iff $n$ is the smallest counting number for which $r^n = 1$.
*** https://mathworld.wolfram.com/PrimitiveRootofUnity.html          :source:
** convolution theorem
*** 'depends fundamentally on the convolution theorem, which provides an efficient way to compute the cyclic convolution of two sequences. It states that the cyclic convolution of two vectors can be found by taking the discreate fourier transform of each of them, multiplying the resulting vectors element by element, and then taking the inverse discrete fourier transform.'
* sources
** [[http://numbers.computation.free.fr/Constants/Algorithms/fft.html][explanation of multiplication algorithm]]
** [[https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwjtqdjE57jvAhV_HzQIHeAwALsQFjAFegQIEhAD&url=http%3A%2F%2Fwww.cs.rug.nl%2F~ando%2Fpdfs%2FAndo_Emerencia_multiplying_huge_integers_using_fourier_transforms_paper.pdf&usg=AOvVaw1Sf0WR5er7An2U2vjzypZy][paper explaining the multiplication ANDO EMERENCIA (S1283936)]]
** [[https://medium.com/@aiswaryamathur/understanding-fast-fourier-transform-from-scratch-to-solve-polynomial-multiplication-8018d511162f][FFT Medium Blog Post]]
** [[https://en.wikipedia.org/wiki/Sch%C3%B6nhage%E2%80%93Strassen_algorithm][wikipedia on schonhage-strassen (multiplication algo)]]
* uses of FFT
** convert mixed signals into constituent sinusoids
** multiply polynomials using convolution theorem
** reduce matrix dimensionality
** audio processing (eg. bass boost)
