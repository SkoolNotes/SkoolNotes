#+TITLE: Fast multiplication with fast fourier transforms
* base knowlege
** primitive root of unity
*** a number $r$ is a primitive $n$th root of unity iff $n$ is the smallest counting number for which $r^n = 1$.
*** https://mathworld.wolfram.com/PrimitiveRootofUnity.html          :source:
** convolution theorem
*** 'depends fundamentally on the convolution theorem, which provides an efficient way to compute the cyclic convolution of two sequences. It states that the cyclic convolution of two vectors can be found by taking the discreate fourier transform of each of them, multiplying the resulting vectors element by element, and then taking the inverse discrete fourier transform.'
* sources
** [[http://numbers.computation.free.fr/Constants/Algorithms/fft.html][explanation of multiplication algorithm]]
** [[https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwjtqdjE57jvAhV_HzQIHeAwALsQFjAFegQIEhAD&url=http%3A%2F%2Fwww.cs.rug.nl%2F~ando%2Fpdfs%2FAndo_Emerencia_multiplying_huge_integers_using_fourier_transforms_paper.pdf&usg=AOvVaw1Sf0WR5er7An2U2vjzypZy][paper explaining the multiplication ANDO EMERENCIA (S1283936)]]
** [[https://medium.com/@aiswaryamathur/understanding-fast-fourier-transform-from-scratch-to-solve-polynomial-multiplication-8018d511162f][FFT Medium Blog Post]]
** [[https://en.wikipedia.org/wiki/Sch%C3%B6nhage%E2%80%93Strassen_algorithm][wikipedia on schonhage-strassen (multiplication algo)]]
* uses of FFT
** convert mixed signals into constituent sinusoids
** multiply polynomials using convolution theorem
** reduce matrix dimensionality
** audio processing (eg. bass boost, or radio denoising for eg. wifi)
** MRI machines? scan certain parts using different overlapping sinusoidal magnitudes of magnetic field
** microscope or astronomy image decomposition
* 3b1b video [[https://www.youtube.com/watch?v=spUNpyF58BY]]
** unmixing waves
*** the added up ones seem needlessly complex for such a little amount of info
** rotating the wave around a circle
*** aka: wave around the circle is polar coords: length = magnitude of wave at that point, offset = phase + some angular velocity (the 'rotation' frequency)
*** there are two frequencies: 1. the frequency at which the vector goes around the circle 'winding frequency', and 2. the original and 'true' frequency of the wave
*** when the frequencies match, all the high points are on the right and low points are on the left... question is how can we quantify this specialness
*** center of mass as a function of the winding frequency
**** frequency of zero is high, and then it wobbles for a while until a frequency matches
** central construct
*** original plot (intensity | time)
*** winding chart (wound signal | signal, winding frequency)
*** center-of-mass plot (x coord | winding frequency)
**** the spike at zero only happens because the original freq doesn't oscillate about zero
** he calls this the 'almost Fourier transform'
*** additive: you can take the almost fourier transform first or you can take the sum first and you will get the same center-of-mass plot out
**** pause and ponder: multiple arrows going around the circle, tip to tail
** formalizing the 'center of mass'
*** complex numbers: works well for 2d plane and rotation can be described by
	\[\begin{aligned}
    e^{2\pi i t}
	\end{aligned}\]
	by multiplying that $t$ by a scalar, you can change the frequency:
	\[\begin{aligned}
    e^{2\pi i f t }
	\end{aligned}\]
*** actual formalization
**** convention: rotate in clockwise direction

	 \[\begin{aligned}
     e^{-2\pi ift}
	 \end{aligned}\]
**** let the original function be called $g(t)$, then scale by that for the 'vector following the original graph magnitude'

	 \[\begin{aligned}
     g(t) e^{-2\pi ift}
	 \end{aligned}\]
**** tracking 'center of mass': sample points and average them

	 if $N$ is the number of points that you sample and $t_k$ is the k-th sampled point,
	 \[\begin{aligned}
	\frac{1}{N}\sum_{i=1}^{N} g(t_k) e^{-2\pi i f t_k}
	 \end{aligned}\]
**** and if we want a more accurate sample, just take the limit to infinity

	 \[\begin{aligned}
    \lim_{N \to\infty }\frac{1}{N} \sum_{i=1}^{N} g(t_k) e^{-2\pi i f t_k}
	 \end{aligned}\]
