#+TITLE: Story of Science: Computational Complexity Theory
#+CONTEXT: 21ISOS201
#+AUTHOR: Albert H
* sources
** gentle introductions
*** https://en.wikipedia.org/wiki/Computational_complexity_theory
*** https://complexityzoo.net/Petting_Zoo
* overview
** computational complexity theory studies how "difficult" a problem is
*** importantly, not how "good" an algorithm is... this field deals with all algorithms that solve a given problem
** key concepts
*** types of problems
*** Turing machines
*** reducibility
*** complexity classes
*** hierarchy
** key problems
*** P vs NP
* flows
** Wikipedia computational complexity theory
*** computational problems
**** problem instances
	 A problem describes the problem. the actual "numbers" that describe a specific problem is called a problem instance. sorting a list is a problem, sorting /this/ list is a problem instance.
**** representing problem instances
	 formally strings of characters from alphabets. The input size is the length of the string. Different representations can be chosen but it should be trivial (fast) to convert from one to the other.
**** decision problems (most basic 
